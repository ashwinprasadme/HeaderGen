{
    "1": [
        "warnings.filterwarnings",
        "pandas.io.parsers.readers.read_csv",
        "numpy.lib.npyio.load",
        "numpy.core.numeric.full",
        "<builtin>.len",
        "<builtin>.range",
        "pandas.core.frame.DataFrame.reset_index",
        "pandas.core.generic.NDFrame.copy",
        "pandas.core.frame.DataFrame.pop",
        "pandas.core.reshape.concat.concat",
        "tqdm.std.tqdm",
        "pandas.core.series.Series.map",
        "pandas.core.base.IndexOpsMixin.value_counts",
        "pandas.core.series.Series.to_dict",
        "pandas.core.series.Series.fillna",
        "scipy.stats.stats.rankdata",
        "scipy.special.erfinv",
        "numpy.core.fromnumeric.clip",
        "<builtin>.print",
        "pandas.core.generic.NDFrame._add_numeric_operations.<locals>.mean",
        "pandas.core.generic.NDFrame._add_numeric_operations.<locals>.std",
        "pandas.core.series.Series.fillna",
        "numpy.core.shape_base.stack",
        "numpy.ndarray.copy",
        "numpy.arange",
        "numpy.random.mtrand.RandomState.shuffle",
        "numpy.core.shape_base.vstack",
        "numpy.zeros",
        "numpy.core.numeric.ones",
        "numpy.core._multiarray_umath.concatenate",
        "keras.engine.input_layer.Input",
        "keras.layers.core.dense.Dense",
        "keras.layers.advanced_activations.PReLU",
        "keras.layers.normalization.batch_normalization.BatchNormalization",
        "keras.layers.core.dropout.Dropout",
        "keras.layers.core.flatten.Flatten",
        "keras.engine.training.Model",
        "keras.engine.training.Model.summary",
        "sklearn.model_selection._split.StratifiedKFold",
        "sklearn.model_selection._split.StratifiedKFold.split",
        "keras.callbacks.ModelCheckpoint",
        "keras.callbacks.ReduceLROnPlateau",
        "keras.engine.training.Model.compile",
        "keras.engine.training.Model.fit",
        "keras.optimizer_v2.adam.Adam",
        "keras.engine.training.Model.load_weights",
        "keras.engine.training.Model.predict",
        "numpy.lib.npyio.save",
        "13-nn-with-magic-augmentation.rankgauss:1",
        "13-nn-with-magic-augmentation.build_model:1",
        "13-nn-with-magic-augmentation.augment_counts:1"
    ],
    "2": [
        "pandas.io.parsers.readers.read_csv",
        "pandas.core.generic.NDFrame.to_csv"
    ]
}